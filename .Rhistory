plot(activity_sum_bydate$date, activity_sum_bydate$steps )
plot(activity_sum_bydate$date, activity_sum_bydate$steps, type = "l" )
plot(activity_sum_bydate$date, activity_sum_bydate$steps, type = "l")
plot(activity_sum_bydate$steps)
plot(activity_sum_bydate$date, activity_sum_bydate$steps, type = "l")
hist(activity_sum_bydate$steps)
sum(activity_sum_bydate$steps<10766)
sum(activity_sum_bydate$steps>10766)
View(activity_sum_bydate)
View(activity_sum_byint)
View(activity_sum_bydate)
#task 1 for na replaced
activity_nar_sum_bydate <- activity_na_rep[,lapply(.SD, sum), by = "date"]
activity_nar_sum_bydate <- activity_nar_sum_bydate[, interval:=NULL]
par(mfrow = c(1,1))
png(filename = "figures/stepsbyday_hist_nar.png", width = 480, height = 480)
hist(activity_sum_bydate$steps, col = "blue", xlab = "# of steps",
main = "Steps taken each day", bty = "l")
dev.off()
#check this values
mean_steps_nar <- mean(activity_nar_sum_bydate$steps)
median_steps_nar <- median(activity_nar_sum_bydate$steps)
sum_na_steps <- sum(is.na(activity_raw$steps))
activity_mean_byint <- activity_raw_tidy[,lapply(.SD, median), by = "interval"]
activity_mean_byint <- data.table(activity_mean_byint[, date = NULL], key = "interval")
#replacing NA steps with mean by interval
activity_na_rep <- activity_raw
for (i in 1:length(activity_raw$steps)) {
if (is.na(activity_raw$steps[i])){
activity_na_rep$steps[i] <-
activity_mean_byint$steps[activity_raw$interval[i]==activity_mean_byint$interval]
}
}
#task 1 for na replaced
activity_nar_sum_bydate <- activity_na_rep[,lapply(.SD, sum), by = "date"]
activity_nar_sum_bydate <- activity_nar_sum_bydate[, interval:=NULL]
par(mfrow = c(1,1))
png(filename = "figures/stepsbyday_hist_nar.png", width = 480, height = 480)
hist(activity_sum_bydate$steps, col = "blue", xlab = "# of steps",
main = "Steps taken each day", bty = "l")
dev.off()
#check this values
mean_steps_nar <- mean(activity_nar_sum_bydate$steps)
median_steps_nar <- median(activity_nar_sum_bydate$steps)
sum_na_steps <- sum(is.na(activity_raw$steps))
activity_mean_byint <- activity_raw_tidy[,lapply(.SD, mean), by = "interval"]
activity_mean_byint <- data.table(activity_mean_byint[, date = NULL], key = "interval")
#replacing NA steps with mean by interval
activity_na_rep <- activity_raw
for (i in 1:length(activity_raw$steps)) {
if (is.na(activity_raw$steps[i])){
activity_na_rep$steps[i] <-
activity_mean_byint$steps[activity_raw$interval[i]==activity_mean_byint$interval]
}
}
sum_na_steps <- sum(is.na(activity_raw$steps))
activity_mean_byint <- activity_raw_tidy[,lapply(.SD, mean), by = "interval"]
activity_mean_byint <- data.table(activity_mean_byint[, date = NULL], key = "interval")
#replacing NA steps with mean by interval
activity_na_rep <- activity_raw
for (i in 1:length(activity_raw$steps)) {
if (is.na(activity_raw$steps[i])){
activity_na_rep$steps[i] <-
activity_mean_byint$steps[activity_raw$interval[i]==activity_mean_byint$interval]
}
}
#task 1 for na replaced
activity_nar_sum_bydate <- activity_na_rep[,lapply(.SD, sum), by = "date"]
activity_nar_sum_bydate <- activity_nar_sum_bydate[, interval:=NULL]
par(mfrow = c(1,1))
png(filename = "figures/stepsbyday_hist_nar.png", width = 480, height = 480)
hist(activity_sum_bydate$steps, col = "blue", xlab = "# of steps",
main = "Steps taken each day", bty = "l")
dev.off()
#check this values
mean_steps_nar <- mean(activity_nar_sum_bydate$steps)
median_steps_nar <- median(activity_nar_sum_bydate$steps)
View(activity_raw)
View(activity_raw_tidy)
length(activity_nar_sum_bydate$date)
length(activity_nar_sum_bydate$steps)
median(activity_nar_sum_bydate$steps)
mean(activity_nar_sum_bydate$steps)
activity_sum_byint <- activity_raw_tidy[,lapply(.SD, mean), by = "interval"]
activity_sum_byint <- activity_sum_byint[, date:=NULL]
par(mfrow = c(1,1))
png(filename = "figures/stepsbyint_tsplot.png", width = 480, height = 480)
#converting 5-min interval to Hours
nice_time <- activity_sum_byint$interval
nice_time <- lapply(nice_time, toString)
nice_time[nchar(nice_time)<3] <- paste("00", nice_time[nchar(nice_time)<3], sep = "")
nice_time[nchar(nice_time)<4] <- paste("0", nice_time[nchar(nice_time)<4], sep = "")
nice_time <- substr(nice_time,1,2)
nice_time <- as.numeric(nice_time)
#Converting Hours value to POSIXlt format for appropriate plotting
nice_time <- as.POSIXlt(nice_time, origin = as.POSIXct(
strptime("1970-01-01 00:00:00", "%Y-%m-%d %H:%M:%S", tz="Europe/Moscow")), format="%M")
plot(nice_time, activity_sum_byint$steps, type = "l", col = "red", xlab = "5-minutes interval", ylab = "# of steps", main = "Number of steps per 5-minute interval")
dev.off()
#max steps per interval
max_int <- activity_sum_byint$interval[activity_sum_byint$steps == (max(activity_sum_byint$steps))]
activity_sum_byint <- activity_raw_tidy[,lapply(.SD, sum), by = "interval"]
activity_sum_byint <- activity_sum_byint[, date:=NULL]
par(mfrow = c(1,1))
png(filename = "figures/stepsbyint_tsplot.png", width = 480, height = 480)
#converting 5-min interval to Hours
nice_time <- activity_sum_byint$interval
nice_time <- lapply(nice_time, toString)
nice_time[nchar(nice_time)<3] <- paste("00", nice_time[nchar(nice_time)<3], sep = "")
nice_time[nchar(nice_time)<4] <- paste("0", nice_time[nchar(nice_time)<4], sep = "")
nice_time <- substr(nice_time,1,2)
nice_time <- as.numeric(nice_time)
#Converting Hours value to POSIXlt format for appropriate plotting
nice_time <- as.POSIXlt(nice_time, origin = as.POSIXct(
strptime("1970-01-01 00:00:00", "%Y-%m-%d %H:%M:%S", tz="Europe/Moscow")), format="%M")
plot(nice_time, activity_sum_byint$steps, type = "l", col = "red", xlab = "5-minutes interval", ylab = "# of steps", main = "Number of steps per 5-minute interval")
dev.off()
#max steps per interval
max_int <- activity_sum_byint$interval[activity_sum_byint$steps == (max(activity_sum_byint$steps))]
dev.off()
mode(activity_sum_bydate$steps)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mean(c(1,2,10,15,100,1000))
Mode(c(1,2,10,15,100,1000))
Mode(c(1,2,2,10,15,100,1000))
mean(c(1,2,2,10,15,100,1000))
median(c(1,2,2,10,15,100,1000))
Mode(activity_sum_bydate$steps)
mean(activity_sum_bydate$steps)
require("lawstat")
require(lawstat)
install.packages("lawstat")
require(lawstat)
symmetry.test(activity_sum_bydate$steps)
symmetry.test(c(1,2,1,2,3,3))
mean(c(1, 2, 1, 2, 3, 3))
median(c(1, 2, 1, 2, 3, 3))
symmetry.test(activity_nar_sum_bydate$steps)
activity_mean_byint <- activity_raw_tidy[,lapply(.SD, mean), by = "interval"]
head(activity_mean_byint)
weekday(activity_raw_tidy$date[1])
weekdays(activity_raw_tidy$date[1])
weekdays(.leap.seconds)
Sys.setenv(LANG = "en")
weekdays(.leap.seconds)
Sys.setlocale("LC_TIME", "English")
weekdays(.leap.seconds)
weekdays(activity_raw_tidy$date[1], abbreviate = FALSE)
weekdays(activity_raw_tidy$date[1], abbreviate)
activity_raw_tidy$date[1]
view(activity_raw_tidy)
View(activity_raw_tidy)
activity_raw_tidy$date[1,2]
activity_raw_tidy$date[1,]
activity_raw_tidy$date[1,1]
activity_raw_tidy$date[3]
activity_raw_tidy[1,3]
activity_raw_tidy[1,2]
activity_raw_tidy[1,1]
activity_raw_tidy[3,1]
activity_raw_tidy[3,4]
head(activity_raw_tidy$date)
activity_raw_tidy$date[1]
as.POSIXct(activity_raw_tidy$date[1], format="%Y-%M-%D")
as.POSIXct(activity_raw_tidy$date[1], format="%YYYY-%MM-%DD")
as.POSIXly(activity_raw_tidy$date[1], format="%Y-%M-%D")
as.POSIXlt(activity_raw_tidy$date[1], format="%Y-%M-%D")
as.POSIXlt(activity_raw_tidy$date[1], format = "%Y-%M-%D")
as.POSIXlt(activity_raw_tidy$date[1])
weekdays(as.POSIXlt(activity_raw_tidy$date[1]))
weekdays_tidy <- > weekdays(as.POSIXlt(activity_raw_tidy$date))
weekdays_tidy <-  weekdays(as.POSIXlt(activity_raw_tidy$date))
activity_raw_tidy_w <- activity_raw_tidy[, weekday := weekdays_tidy]
View(activity_raw_tidy_w)
activity_mean_byint <- activity_raw_tidy_w[,lapply(.SD, mean), by = "interval"]
activity_mean_byint <- activity_raw_tidy_w[,lapply(.SD, mean), by = "interval", "weekday"]
activity_mean_byint <- activity_raw_tidy_w[,lapply(.SD, mean), by = "interval, weekday"]
activity_raw_tidy_w <- activity_raw_tidy[, weekday := weekdays_tidy]
activity_mean_byint <- activity_raw_tidy_w[,lapply(.SD, mean), by = "interval, weekday"]
activity_mean_byint <- activity_raw_tidy_w[,lapply(.SD, mean), by = "interval, weekday"]
activity_mean_byint <- activity_raw_tidy_w[,lapply(.SD, mean), by = "interval,weekday"]
activity_mean_byint <- data.table(activity_mean_byint[, date = NULL], key = "interval")
View(activity_mean_byint)
activity_mean_byintweek <- activity_raw_tidy_w[,lapply(.SD, mean), by = "interval,weekday"]
activity_mean_byintweek <- data.table(activity_mean_byint[, date = NULL], key = "interval")
activity_mean_byintweek$steps[activity_na_rep$interval[i]==activity_mean_byintweek$interval & activity_na_rep$weekday[i]==activity_mean_byintweek$weekday]
activity_mean_byintweek$steps[activity_na_rep$interval[1]==activity_mean_byintweek$interval & activity_na_rep$weekday[1]==activity_mean_byintweek$weekday]
activity_mean_byintweek$steps[activity_na_rep$interval[1]==activity_mean_byintweek$interval && activity_na_rep$weekday[1]==activity_mean_byintweek$weekday]
1>0
1>0 % 1=1
1>0 & 1=1
1>0 && 1=1
(1>0) &  (1=1)
(1>0) &  (1==1)
activity_mean_byintweek$steps[activity_na_rep$weekday[1]==activity_mean_byintweek$weekday]
activity_na_rep$weekday[1]
#replacing NA steps with mean by interval
weekdays <-  weekdays(as.POSIXlt(activity_raw$date))
activity_na_rep <- activity_raw[, weekday := weekdays]
activity_na_rep$weekday[1]
activity_mean_byintweek$steps[activity_na_rep$weekday[1]==activity_mean_byintweek$weekday]
activity_mean_byintweek$steps[activity_na_rep$interval[1]==activity_mean_byintweek$interval && activity_na_rep$weekday[1]==activity_mean_byintweek$weekday]
activity_mean_byintweek$steps[activity_na_rep$interval[1]==activity_mean_byintweek$interval & activity_na_rep$weekday[1]==activity_mean_byintweek$weekday]
for (i in 1:length(activity_na_rep$steps)) {
if (is.na(activity_na_rep$steps[i])){
activity_na_rep$steps[i] <-
activity_mean_byintweek$steps[activity_na_rep$interval[i]==activity_mean_byintweek$interval &
activity_na_rep$weekday[i]==activity_mean_byintweek$weekday]
}
}
activity_nar_sum_bydate <- activity_na_rep[,lapply(.SD, sum), by = "date"]
activity_nar_sum_bydate <- activity_nar_sum_bydate[, interval:=NULL]
mean_steps_nar <- mean(activity_nar_sum_bydate$steps)
median_steps_nar <- median(activity_nar_sum_bydate$steps)
activity_raw_na0 <- activity_raw
activity_raw <- data.table(read.csv("activity.csv"))
activity_raw_na0 <- activity_raw
for (i in seq_along(activity_raw_na0$steps))
set(activity_raw_na0$steps, i=which(is.na(activity_raw_na0$steps[[i]])), j=i, value=0)
for (i in seq_along(activity_raw_na0$steps))
set(activity_raw_na0$steps, i=which(is.na(activity_raw_na0$steps[i])), j=i, value=0)
activity_raw_na0$steps[1]
for (i in seq_along(activity_raw_na0$steps))
set(activity_raw_na0$steps[i], i=which(is.na(activity_raw_na0$steps[i])), j=i, value=0)
.Internal(inspect(activity_raw_na0))
.Internal(inspect(activity_raw_na0$steps))
which(is.na(activity_raw_na0$steps[1]))
which(is.na(activity_raw_na0$steps[2]))
which(is.na(activity_raw_na0$steps[3]))
which(is.na(activity_raw_na0$steps[111]))
which(is.na(activity_raw_na0$steps[1000]))
a=which(is.na(activity_raw_na0$steps[1000]))
a
?set
for (i in seq_along(activity_raw_na0$steps))
set(activity_raw_na0$steps, i=which(is.na(activity_raw_na0$steps[i])), j=i, value=0)
or (i in seq_along(activity_raw_na0$steps))
set(activity_raw_na0$steps, i=which(is.na(activity_raw_na0$steps[[i]])), j=i, value=0)
activity_raw_na0 <- activity_raw
activity_raw_na0[is.na(activity_raw_na0)] <-0
View(activity_raw_na0)
activity_sum_bydate <- activity_raw_na0[,lapply(.SD, sum), by = "date"]
activity_sum_bydate <- activity_sum_bydate[, interval:=NULL]
par(mfrow = c(1,1))
png(filename = "figures/stepsbyday_hist.png", width = 480, height = 480)
hist(activity_sum_bydate$steps, col = "blue", xlab = "# of steps",
main = "Steps taken each day", bty = "l")
dev.off()
#check this values
mean_steps <- mean(activity_sum_bydate$steps)
median_steps <- median(activity_sum_bydate$steps)
activity_sum_bydate <- activity_raw_tidy[,lapply(.SD, sum), by = "date"]
activity_sum_bydate <- activity_sum_bydate[, interval:=NULL]
par(mfrow = c(1,1))
png(filename = "figures/stepsbyday_hist.png", width = 480, height = 480)
hist(activity_sum_bydate$steps, col = "blue", xlab = "# of steps",
main = "Steps taken each day", bty = "l")
dev.off()
#check this values
mean_steps <- mean(activity_sum_bydate$steps)
median_steps <- median(activity_sum_bydate$steps)
activity_raw <- data.table(read.csv("activity.csv"))
activity_raw_tidy <- activity_raw[complete.cases(activity_raw$steps),]
activity_sum_bydate <- activity_raw_tidy[,lapply(.SD, sum), by = "date"]
activity_sum_bydate <- activity_sum_bydate[, interval:=NULL]
par(mfrow = c(1,1))
png(filename = "figures/stepsbyday_hist.png", width = 480, height = 480)
hist(activity_sum_bydate$steps, col = "blue", xlab = "# of steps",
main = "Steps taken each day", bty = "l")
dev.off()
#check this values
mean_steps <- mean(activity_sum_bydate$steps)
median_steps <- median(activity_sum_bydate$steps)
"Monday" == "^M"
"Monday" == "^M*"
"Monday" == "^M.*"
"Monday" == ^M.*
?grep
grep("^M", "Monday")
grepl("^M", "Monday")
weekdays(.leap.seconds)
weekdays(.leap.seconds)[2:7]
grepl("^S", weekdays(.leap.seconds)[2:7])
weektest <- weekdays(.leap.seconds)[2:7]
grepl("^S", weektest)
weektest[grepl("^S", weektest)] <- "weekend"
weektest
weektest <- weekdays(.leap.seconds)[2:7]
weektest[!grepl("^S", weektest)] <- "weekend"
weektest
activity_na_rep$weekdaytype[1] <- 0
View(activity_na_rep)
activity_na_rep <- activity_raw[, weekday := weekdays]
View(activity_na_rep)
activity_na_rep$weekdaytype <- 0
View(activity_na_rep)
activity_na_rep$weekdaytype[!grepl("^S",activity_na_rep$weekday)] <- "weekday"
activity_na_rep$weekdaytype[grepl("^S",activity_na_rep$weekday)] <- "weekend"
View(activity_na_rep)
for (i in 1:length(activity_na_rep$steps)) {
if (is.na(activity_na_rep$steps[i])){
activity_na_rep$steps[i] <-
activity_mean_byintweek$steps[activity_na_rep$interval[i]==activity_mean_byintweek$interval &
activity_na_rep$weekday[i]==activity_mean_byintweek$weekday]
}
}
activity_mean_byint_wtype <- activity_na_rep[,lapply(.SD, mean), by = "interval,weekdaytype"]
Viev(activity_na_rep)
View(activity_na_rep)
activity_mean_byint_wtype <- activity_na_rep[,date:=NULL]
activity_mean_byint_wtype <- activity_mean_byint_wtype[,weekday:=NULL]
activity_mean_byint_wtype <- activity_mean_byint_wtype[,lapply(.SD, mean), by = "interval,weekdaytype"]
View( activity_mean_byint_wtype)
png(filename = "figures/activity-weekedn-day.png", width = 640, height = 300)
g <- ggplot(activity_mean_byint_wtype, aes(interval, steps))
p <- g + geom_point() + facet_wrap( ~ weekdaytype) +
geom_smooth(method = "lm", se = FALSE) +
#scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "steps ~ weekday weekend") +
labs(y = "steps")
print(p)
dev.off()
tail(nice_time)
int2nicetime <- function(nc) {
#converting 5-min interval to Hours
nice_time <- nc
nice_time <- lapply(nice_time, toString)
nice_time[nchar(nice_time)<3] <- paste("00", nice_time[nchar(nice_time)<3], sep = "")
nice_time[nchar(nice_time)<4] <- paste("0", nice_time[nchar(nice_time)<4], sep = "")
nice_time <- substr(nice_time,1,2)
nice_time <- as.numeric(nice_time)
#Converting Hours value to POSIXlt format for appropriate plotting
as.POSIXlt(nice_time, origin = as.POSIXct(
strptime("1970-01-01 00:00:00", "%Y-%m-%d %H:%M:%S", tz="Europe/Moscow")), format="%M")
}
tail(int2nicetime(activity_sum_byint$interval))
tail(nice_time)
png(filename = "figures/activity-weekedn-day.png", width = 640, height = 300)
g <- ggplot(activity_mean_byint_wtype, aes(int2nicetime(interval), steps))
p <- g + geom_point() + facet_wrap( ~ weekdaytype) +
geom_smooth(method = "lm", se = FALSE) +
#scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "steps ~ weekday weekend") +
labs(y = "steps")
print(p)
dev.off()
png(filename = "figures/activity-weekedn-day.png", width = 640, height = 300)
g <- ggplot(activity_mean_byint_wtype, aes(int2nicetime(interval), steps))
p <- g + geom_line() + facet_wrap( ~ weekdaytype) +
#geom_smooth(method = "lm", se = FALSE) +
#scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "steps ~ weekday weekend") +
labs(y = "steps")
print(p)
dev.off()
png(filename = "figures/activity-weekedn-day.png", width = 640, height = 300)
g <- ggplot(activity_mean_byint_wtype, aes(int2nicetime(interval), steps))
p <- g + geom_line() + facet_wrap( ~ weekdaytype) +
#geom_smooth(method = "lm", se = FALSE) +
labs(title = "Averaged steps for weekday and weekend") +
labs(y = "Steps", x = "Time")
print(p)
dev.off()
library(png)
library(grid)
install.packages("png")
grid.raster(readPNG("figures/activity-weekedn-day.png"))
library(png)
library(grid)
grid.raster(readPNG("figures/activity-weekedn-day.png"))
gri <- grid.raster(readPNG("figures/activity-weekedn-day.png"))
sum_na_steps <- sum(is.na(activity_raw$steps))
weekdays_tidy <-  weekdays(as.POSIXlt(activity_raw_tidy$date))
activity_raw_tidy_w <- activity_raw_tidy[, weekday := weekdays_tidy]
activity_mean_byintweek <- activity_raw_tidy_w[,lapply(.SD, mean), by = "interval,weekday"]
activity_mean_byintweek <- data.table(activity_mean_byintweek[, date = NULL], key = "interval")
activity_mean_byintweek <- data.table(activity_mean_byintweek[,date = NULL], key = "interval")
View(activity_mean_byintweek)
activity_mean_byintweek <- data.table(activity_mean_byintweek[, date := NULL], key = "interval")
View(activity_mean_byintweek)
activity_mean_byintweek <- activity_mean_byintweek[, date := NULL]
weekdays <-  weekdays(as.POSIXlt(activity_raw$date))
activity_na_rep <- activity_raw[, weekday := weekdays]
for (i in 1:length(activity_na_rep$steps)) {
if (is.na(activity_na_rep$steps[i])){
activity_na_rep$steps[i] <-
activity_mean_byintweek$steps[activity_na_rep$interval[i]==activity_mean_byintweek$interval &
activity_na_rep$weekday[i]==activity_mean_byintweek$weekday]
}
}
#task 1 for na replaced
activity_nar_sum_bydate <- activity_na_rep[,lapply(.SD, sum), by = "date"]
activity_nar_sum_bydate <- activity_nar_sum_bydate[, interval:=NULL]
par(mfrow = c(1,1))
png(filename = "figures/stepsbyday_hist_nar.png", width = 480, height = 480)
hist(activity_sum_bydate$steps, col = "blue", xlab = "# of steps",
main = "Steps taken each day", bty = "l")
dev.off()
#mean and median for replaced
mean_steps_nar <- mean(activity_nar_sum_bydate$steps)
median_steps_nar <- median(activity_nar_sum_bydate$steps)
#calculcating weekdays for each interval
sum_na_steps <- sum(is.na(activity_raw$steps))
weekdays_tidy <-  weekdays(as.POSIXlt(activity_raw_tidy$date))
activity_raw_tidy_w <- activity_raw_tidy[, weekday := weekdays_tidy]
activity_mean_byintweek <- activity_raw_tidy_w[,lapply(.SD, mean), by = "interval,weekday"]
activity_mean_byintweek <- activity_mean_byintweek[, date := NULL]
#activity_mean_byintweek <- data.table(activity_mean_byintweek[, date := NULL], key = "interval")
#replacing NA steps with mean by interval and weekday
weekdays <-  weekdays(as.POSIXlt(activity_raw$date))
activity_na_rep <- activity_raw[, weekday := weekdays]
for (i in 1:length(activity_na_rep$steps)) {
if (is.na(activity_na_rep$steps[i])){
activity_na_rep$steps[i] <-
activity_mean_byintweek$steps[activity_na_rep$interval[i]==activity_mean_byintweek$interval &
activity_na_rep$weekday[i]==activity_mean_byintweek$weekday]
}
}
#task 1 for na replaced
activity_nar_sum_bydate <- activity_na_rep[,lapply(.SD, sum), by = "date"]
activity_nar_sum_bydate <- activity_nar_sum_bydate[, interval:=NULL]
par(mfrow = c(1,1))
png(filename = "figures/stepsbyday_hist_nar.png", width = 480, height = 480)
hist(activity_sum_bydate$steps, col = "blue", xlab = "# of steps",
main = "Steps taken each day", bty = "l")
dev.off()
#mean and median for replaced
mean_steps_nar <- mean(activity_nar_sum_bydate$steps)
median_steps_nar <- median(activity_nar_sum_bydate$steps)
#creating column for weekdays\weekends
activity_na_rep$weekdaytype <- 0
activity_na_rep$weekdaytype[!grepl("^S",activity_na_rep$weekday)] <- "weekday"
activity_na_rep$weekdaytype[grepl("^S",activity_na_rep$weekday)] <- "weekend"
activity_mean_byint_wtype <- activity_na_rep[,date:=NULL]
activity_mean_byint_wtype <- activity_mean_byint_wtype[,weekday:=NULL]
activity_mean_byint_wtype <- activity_mean_byint_wtype[,lapply(.SD, mean), by = "interval,weekdaytype"]
png(filename = "figures/activity-weekedn-day.png", width = 640, height = 300)
g <- ggplot(activity_mean_byint_wtype, aes(int2nicetime(interval), steps))
p <- g + geom_line() + facet_wrap( ~ weekdaytype) +
#geom_smooth(method = "lm", se = FALSE) +
labs(title = "Averaged steps for weekday and weekend") +
labs(y = "Steps", x = "Time")
print(p)
dev.off()
activity_mean_byintweek <- activity_raw_tidy_w[,lapply(.SD, mean), by = "interval,weekday"]
activity_nar_sum_bydate <- activity_na_rep[,lapply(.SD, sum), by = "date"]
View(activity_na_rep)
activity_nar_sum_bydate <- activity_na_rep[,weekaytype:=NULL][,lapply(.SD, sum), by = "date"]
View(activity_na_rep)
activity_nar_sum_bydate <- activity_na_rep[,weekaytype:=NULL]
activity_nar_sum_bydate <- activity_nar_sum_bydate[,lapply(.SD, sum), by = "date"]
activity_nar_sum_bydate <- activity_na_rep[,weekaytype:=NULL]
activity_nar_sum_bydate <- activity_nar_sum_bydate[,lapply(.SD, sum), by = date]
activity_nar_sum_bydate <- activity_na_rep[,weekdaytype:=NULL]
activity_nar_sum_bydate <- activity_nar_sum_bydate[,lapply(.SD, sum), by = "date"]
activity_nar_sum_bydate <- activity_nar_sum_bydate[,lapply(.SD, sum), by = "date"]
activity_nar_sum_bydate <- activity_na_rep[,weekdaytype:=NULL]
activity_nar_sum_bydate <- activity_na_rep[,weekaytype:=NULL]
View(activity_nar_sum_bydate)
View(activity_na_rep)
View(activity_nar_sum_bydate )
activity_na_rep <- activity_raw[, weekday := weekdays]
View(activity_na_rep)
for (i in 1:length(activity_na_rep$steps)) {
if (is.na(activity_na_rep$steps[i])){
activity_na_rep$steps[i] <-
activity_mean_byintweek$steps[activity_na_rep$interval[i]==activity_mean_byintweek$interval &
activity_na_rep$weekday[i]==activity_mean_byintweek$weekday]
}
}
View(activity_na_rep)
#task 1 for na replaced
activity_nar_sum_bydate <- activity_na_rep[,weekaytype:=NULL]
activity_nar_sum_bydate <-activity_nar_sum_bydate[,lapply(.SD, sum), by = "date"]
View(activity_nar_sum_bydate)
#replacing NA steps with mean by interval and weekday
weekdays <-  weekdays(as.POSIXlt(activity_raw$date))
activity_na_rep <- activity_raw[, weekday := weekdays]
for (i in 1:length(activity_na_rep$steps)) {
if (is.na(activity_na_rep$steps[i])){
activity_na_rep$steps[i] <-
activity_mean_byintweek$steps[activity_na_rep$interval[i]==activity_mean_byintweek$interval &
activity_na_rep$weekday[i]==activity_mean_byintweek$weekday]
}
}
#task 1 for na replaced
activity_nar_sum_bydate <- activity_na_rep[,weekaytype:=NULL]
activity_nar_sum_bydate <- activity_nar_sum_bydate[,weekay:=NULL]
activity_nar_sum_bydate <-activity_nar_sum_bydate[,lapply(.SD, sum), by = "date"]
#task 1 for na replaced
activity_nar_sum_bydate <- activity_na_rep[,weekaytype:=NULL]
activity_nar_sum_bydate <- activity_nar_sum_bydate[,weekday:=NULL]
activity_nar_sum_bydate <-activity_nar_sum_bydate[,lapply(.SD, sum), by = "date"]
#creating column for weekdays\weekends
activity_na_rep$weekdaytype <- 0
activity_na_rep$weekdaytype[!grepl("^S",activity_na_rep$weekday)] <- "weekday"
activity_na_rep$weekdaytype[grepl("^S",activity_na_rep$weekday)] <- "weekend"
activity_mean_byint_wtype <- activity_na_rep[,date:=NULL]
activity_mean_byint_wtype <- activity_mean_byint_wtype[,weekday:=NULL]
activity_mean_byint_wtype <- activity_mean_byint_wtype[,lapply(.SD, mean), by = "interval,weekdaytype"]
png(filename = "figures/activity-weekedn-day.png", width = 640, height = 300)
g <- ggplot(activity_mean_byint_wtype, aes(int2nicetime(interval), steps))
p <- g + geom_line() + facet_wrap( ~ weekdaytype) +
#geom_smooth(method = "lm", se = FALSE) +
labs(title = "Averaged steps for weekday and weekend") +
labs(y = "Steps", x = "Time")
print(p)
dev.off()
```{r Functions and library chunk, echo =TRUE, results='hide'}
